version: '3'
services:
  parity-system:
#    build: './docker/parity-system'
    image: 'openjdk:8-jre-alpine'
    ports:
      - '4000:4000'
    volumes:
      - "./data/opt/parity:/opt/parity"
    expose:
      - "4000/tcp"
      - "5001/udp"
      - "5000/udp"
      - "6000/udp"
      - "6001/udp"
    entrypoint:
      - /usr/bin/java
      - -jar
      - /opt/parity/parity-system.jar
      - /opt/parity/parity-system.conf
  parity-fix:
#    build: './docker/parity-fix'
    image: 'openjdk:8-jre-alpine'
    ports:
      - '4010:4010'
    expose:
      - "4010"
    volumes:
      - "./data/opt/parity:/opt/parity"
    entrypoint:
      - /usr/bin/java
      - -jar
      - /opt/parity/parity-fix.jar
      - /opt/parity/parity-fix.conf
    depends_on:
      - parity-system
  parity-wsreporter:
    image: 'openjdk:8-jre-alpine'
    volumes:
      - "./data/opt/parity:/opt/parity"
    entrypoint:
      - /usr/bin/java
      - -jar
      - /opt/parity/parity-wsreporter.jar
      - -t
      - /opt/parity/parity-reporter.conf
    depends_on:
      - parity-system
      - crossbar
  parity-client:
    image: 'openjdk:8-jre-alpine'
    volumes:
      - "./data/opt/parity:/opt/parity"
    depends_on:
      - parity-system
#  market-data-gateway:
#    build: './docker/nassau-soupbintcp-gateway'
#    ports:
#      - '5000:5000'
#    environment:
#      NASSAU_SOUPBINTCP_GATEWAY_UPSTREAM_MULTICAST_PORT: '5000'
#      NASSAU_SOUPBINTCP_GATEWAY_UPSTREAM_REQUEST_PORT: '5001'
#  market-reporting-gateway:
#    build: './docker/nassau-soupbintcp-gateway'
#    ports:
#      - '6000:5000'
#    environment:
#      NASSAU_SOUPBINTCP_GATEWAY_UPSTREAM_MULTICAST_PORT: '6000'
#      NASSAU_SOUPBINTCP_GATEWAY_UPSTREAM_REQUEST_PORT: '6001'
#  api:
#    container_name: ${APP_NAME}_${API_HOST}
#    build: './docker/api'
#    restart: always
#    ports:
#      - '8082:8080'
#    volumes:
#      - './api:/go/src/app'
#    depends_on:
#      - 'mongo'
#  web:
#    image: 'nginx:alphine'
#    container_name: ${APP_NAME}_${WEB_HOST}
#    build: './docker/web'
#    ports:
#      - '8081:80'
#    volumes:
#      - './docker/web:/usr/share/nginx/html'
#      - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
#    depends_on:
#      - 'api'
  mongo:
    image: 'mongo:latest'
    container_name: ${APP_NAME}_${MONGO_HOST}
    restart: always
    ports:
      - '27100:27017'
    volumes:
      - "./data/db/mongo:/data/db"
#  mysqldb:
#    image: mysql
#    container_name: ${APP_NAME}_${MYSQL_HOST}
#    restart: always
#    env_file:
#      - ".env"
#    environment:
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#    ports:
#      - "8989:3306"
#    volumes:
#      - "./data/db/mysql:/var/lib/mysql"
  crossbar:
    image: 'crossbario/crossbar'
    container_name: ${APP_NAME}_${CROSSBAR_HOST}
    restart: always
    ports:
      - '7000:8080'

